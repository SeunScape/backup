{"ast":null,"code":"/*eslint-disable no-empty */\n'use strict';\n\nexports.__esModule = true;\nexports.saveState = saveState;\nexports.readState = readState;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar KeyPrefix = '@@History/';\nvar QuotaExceededError = 'QuotaExceededError';\nvar SecurityError = 'SecurityError';\n\nfunction createKey(key) {\n  return KeyPrefix + key;\n}\n\nfunction saveState(key, state) {\n  try {\n    window.sessionStorage.setItem(createKey(key), JSON.stringify(state));\n  } catch (error) {\n    if (error.name === SecurityError) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available due to security settings') : undefined;\n      return;\n    }\n\n    if (error.name === QuotaExceededError && window.sessionStorage.length === 0) {\n      // Safari \"private mode\" throws QuotaExceededError.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : undefined;\n      return;\n    }\n\n    throw error;\n  }\n}\n\nfunction readState(key) {\n  var json = undefined;\n\n  try {\n    json = window.sessionStorage.getItem(createKey(key));\n  } catch (error) {\n    if (error.name === SecurityError) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to read state; sessionStorage is not available due to security settings') : undefined;\n      return null;\n    }\n  }\n\n  if (json) {\n    try {\n      return JSON.parse(json);\n    } catch (error) {// Ignore invalid JSON.\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["C:/Flippay/node_modules/history/lib/DOMStateStorage.js"],"names":["exports","__esModule","saveState","readState","_interopRequireDefault","obj","_warning","require","_warning2","KeyPrefix","QuotaExceededError","SecurityError","createKey","key","state","window","sessionStorage","setItem","JSON","stringify","error","name","process","env","NODE_ENV","undefined","length","json","getItem","parse"],"mappings":"AAAA;AACA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,SAAR,GAAoBA,SAApB;AACAF,OAAO,CAACG,SAAR,GAAoBA,SAApB;;AAEA,SAASC,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACJ,UAAX,GAAwBI,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAEjG,IAAIC,QAAQ,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AAEA,IAAIC,SAAS,GAAGJ,sBAAsB,CAACE,QAAD,CAAtC;;AAEA,IAAIG,SAAS,GAAG,YAAhB;AACA,IAAIC,kBAAkB,GAAG,oBAAzB;AACA,IAAIC,aAAa,GAAG,eAApB;;AAEA,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AACtB,SAAOJ,SAAS,GAAGI,GAAnB;AACD;;AAED,SAASX,SAAT,CAAmBW,GAAnB,EAAwBC,KAAxB,EAA+B;AAC7B,MAAI;AACFC,IAAAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8BL,SAAS,CAACC,GAAD,CAAvC,EAA8CK,IAAI,CAACC,SAAL,CAAeL,KAAf,CAA9C;AACD,GAFD,CAEE,OAAOM,KAAP,EAAc;AACd,QAAIA,KAAK,CAACC,IAAN,KAAeV,aAAnB,EAAkC;AAChC;AACA;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwChB,SAAS,CAAC,SAAD,CAAT,CAAqB,KAArB,EAA4B,0FAA5B,CAAxC,GAAkKiB,SAAlK;AAEA;AACD;;AAED,QAAIL,KAAK,CAACC,IAAN,KAAeX,kBAAf,IAAqCK,MAAM,CAACC,cAAP,CAAsBU,MAAtB,KAAiC,CAA1E,EAA6E;AAC3E;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwChB,SAAS,CAAC,SAAD,CAAT,CAAqB,KAArB,EAA4B,wFAA5B,CAAxC,GAAgKiB,SAAhK;AAEA;AACD;;AAED,UAAML,KAAN;AACD;AACF;;AAED,SAASjB,SAAT,CAAmBU,GAAnB,EAAwB;AACtB,MAAIc,IAAI,GAAGF,SAAX;;AACA,MAAI;AACFE,IAAAA,IAAI,GAAGZ,MAAM,CAACC,cAAP,CAAsBY,OAAtB,CAA8BhB,SAAS,CAACC,GAAD,CAAvC,CAAP;AACD,GAFD,CAEE,OAAOO,KAAP,EAAc;AACd,QAAIA,KAAK,CAACC,IAAN,KAAeV,aAAnB,EAAkC;AAChC;AACA;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwChB,SAAS,CAAC,SAAD,CAAT,CAAqB,KAArB,EAA4B,0FAA5B,CAAxC,GAAkKiB,SAAlK;AAEA,aAAO,IAAP;AACD;AACF;;AAED,MAAIE,IAAJ,EAAU;AACR,QAAI;AACF,aAAOT,IAAI,CAACW,KAAL,CAAWF,IAAX,CAAP;AACD,KAFD,CAEE,OAAOP,KAAP,EAAc,CACd;AACD;AACF;;AAED,SAAO,IAAP;AACD","sourcesContent":["/*eslint-disable no-empty */\n'use strict';\n\nexports.__esModule = true;\nexports.saveState = saveState;\nexports.readState = readState;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar KeyPrefix = '@@History/';\nvar QuotaExceededError = 'QuotaExceededError';\nvar SecurityError = 'SecurityError';\n\nfunction createKey(key) {\n  return KeyPrefix + key;\n}\n\nfunction saveState(key, state) {\n  try {\n    window.sessionStorage.setItem(createKey(key), JSON.stringify(state));\n  } catch (error) {\n    if (error.name === SecurityError) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available due to security settings') : undefined;\n\n      return;\n    }\n\n    if (error.name === QuotaExceededError && window.sessionStorage.length === 0) {\n      // Safari \"private mode\" throws QuotaExceededError.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : undefined;\n\n      return;\n    }\n\n    throw error;\n  }\n}\n\nfunction readState(key) {\n  var json = undefined;\n  try {\n    json = window.sessionStorage.getItem(createKey(key));\n  } catch (error) {\n    if (error.name === SecurityError) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to read state; sessionStorage is not available due to security settings') : undefined;\n\n      return null;\n    }\n  }\n\n  if (json) {\n    try {\n      return JSON.parse(json);\n    } catch (error) {\n      // Ignore invalid JSON.\n    }\n  }\n\n  return null;\n}"]},"metadata":{},"sourceType":"script"}